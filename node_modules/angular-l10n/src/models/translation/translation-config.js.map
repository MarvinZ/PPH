{"version":3,"file":"translation-config.js","sourceRoot":"","sources":["../../../../src/models/translation/translation-config.ts"],"names":[],"mappings":"AACA;IACA;;OAEG;IACH,2BAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IACxD;;;;;;;OAOG;IACI,0CAAc,GAArB,UAAsB,YAAoB,EAAE,WAAgB;QACpD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY,CAAC,GAAG,WAAW,CAAC;QAC3E,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;;;OAOG;IACI,uCAAW,GAAlB,UAAmB,MAAc,EAAE,UAA2B;QAA3B,0BAA2B,GAA3B,mBAA2B;QACtD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACnG,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;;;OAOG;IACI,6CAAiB,GAAxB,UAAyB,IAAY,EAAE,UAA2B;QAA3B,0BAA2B,GAA3B,mBAA2B;QAC1D,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACpG,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;OAGG;IACI,+CAAmB,GAA1B;QACQ,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;OAIG;IACI,2CAAe,GAAtB,UAAuB,KAAa;QAC5B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;OAIG;IACI,yCAAa,GAApB,UAAqB,GAAW;QACxB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,GAAG,GAAG,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;OAIG;IACI,mDAAuB,GAA9B,UAA+B,YAAoB;QAC3C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEL,wBAAC;AAAD,CAAC,AA7ED,IA6EC;AAED;IACA,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC;AACxC,CAAC","sourcesContent":["import { TranslationService } from '../../services/translation.service';\nexport class TranslationConfig {\n/**\n * @param {?} translation\n */\nconstructor(private translation: TranslationService) { }\n/**\n * Direct loading: adds translation data.\r\\@param languageCode ISO 639 two-letter or three-letter code of the language\r\\@param translation Translation data of the language\n * @param {?} languageCode\n * @param {?} translation\n * @return {?}\n */\npublic AddTranslation(languageCode: string, translation: any): TranslationConfig {\r\n        this.translation.configuration.translationData[languageCode] = translation;\r\n        return this;\r\n    }\n/**\n * Asynchronous loading: adds a translation provider.\r\\@param prefix The path prefix of the json files\r\\@param dataFormat Data format: default & supported value is 'json'\n * @param {?} prefix\n * @param {?=} dataFormat\n * @return {?}\n */\npublic AddProvider(prefix: string, dataFormat: string = \"json\"): TranslationConfig {\r\n        this.translation.configuration.providers.push({ path: prefix, dataFormat: \"json\", webAPI: false });\r\n        return this;\r\n    }\n/**\n * Asynchronous loading: adds a Web API provider.\r\\@param path [path]{languageCode} will be the URL used by the Http GET requests\r\\@param dataFormat Data format: default & supported value is 'json'\n * @param {?} path\n * @param {?=} dataFormat\n * @return {?}\n */\npublic AddWebAPIProvider(path: string, dataFormat: string = \"json\"): TranslationConfig {\r\n        this.translation.configuration.providers.push({ path: path, dataFormat: dataFormat, webAPI: true });\r\n        return this;\r\n    }\n/**\n * Sets the use of locale (languageCode-countryCode) as language.\n * @return {?}\n */\npublic UseLocaleAsLanguage(): TranslationConfig {\r\n        this.translation.configuration.localeAsLanguage = true;\r\n        return this;\r\n    }\n/**\n * Sets the value to use for missing keys.\n * @param {?} value\n * @return {?}\n */\npublic SetMissingValue(value: string): TranslationConfig {\r\n        this.translation.configuration.missingValue = value;\r\n        return this;\r\n    }\n/**\n * Sets the key to use for missing keys.\n * @param {?} key\n * @return {?}\n */\npublic SetMissingKey(key: string): TranslationConfig {\r\n        this.translation.configuration.missingKey = key;\r\n        return this;\r\n    }\n/**\n * Sets composed key separator. Default is the point '.'.\n * @param {?} keySeparator\n * @return {?}\n */\npublic SetComposedKeySeparator(keySeparator: string): TranslationConfig {\r\n        this.translation.configuration.keySeparator = keySeparator;\r\n        return this;\r\n    }\r\n\r\n}\n\nfunction TranslationConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationConfig.prototype.translation;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}