import { TranslationService } from '../../services/translation.service';
export declare class TranslationConfig {
    private translation;
    constructor(translation: TranslationService);
    /**
     * Direct loading: adds translation data.
     * @param languageCode ISO 639 two-letter or three-letter code of the language
     * @param translation Translation data of the language
     */
    AddTranslation(languageCode: string, translation: any): TranslationConfig;
    /**
     * Asynchronous loading: adds a translation provider.
     * @param prefix The path prefix of the json files
     * @param dataFormat Data format: default & supported value is 'json'
     */
    AddProvider(prefix: string, dataFormat?: string): TranslationConfig;
    /**
     * Asynchronous loading: adds a Web API provider.
     * @param path [path]{languageCode} will be the URL used by the Http GET requests
     * @param dataFormat Data format: default & supported value is 'json'
     */
    AddWebAPIProvider(path: string, dataFormat?: string): TranslationConfig;
    /**
     * Sets the use of locale (languageCode-countryCode) as language.
     */
    UseLocaleAsLanguage(): TranslationConfig;
    /**
     * Sets the value to use for missing keys.
     */
    SetMissingValue(value: string): TranslationConfig;
    /**
     * Sets the key to use for missing keys.
     */
    SetMissingKey(key: string): TranslationConfig;
    /**
     * Sets composed key separator. Default is the point '.'.
     */
    SetComposedKeySeparator(keySeparator: string): TranslationConfig;
}
