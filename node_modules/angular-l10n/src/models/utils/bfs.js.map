{"version":3,"file":"bfs.js","sourceRoot":"","sources":["../../../../src/models/utils/bfs.ts"],"names":[],"mappings":"AACA;;;;GAIG;AACH;IAAA;IA2CA,CAAC;IA1CD;;;;OAIG;IACW,iBAAa,GAA3B,UAA4B,QAAa;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IACL;;;OAGG;IACY,QAAI,GAAnB,UAAoB,QAAa;QACzB,IAAI,gBAAgB,CAAC,KAAK,GAAU,EAAE,CAAC;QACvC,IAAI,gBAAgB,CAAC,KAAU,CAAC;QAEhC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErB,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtB,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC3B,GAAG,CAAC,CAA+B,UAAgB,EAAhB,KAAA,KAAK,CAAC,UAAU,EAAhB,cAAgB,EAAhB,IAAgB,CAAC;oBAA/C,IAAqB,KAAK,SAAA;oBAC3B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACrB;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;OAGG;IACY,gBAAY,GAA3B,UAA4B,IAAS;QAC7B,MAAM,CAAC,OAAO,IAAI,KAAK,WAAW;YAC9B,IAAI,CAAC,SAAS,IAAI,IAAI;YACtB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE;YAC3B,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEL,UAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["\n/**\n * Breadth First Search (BFS) algorithm for traversing & searching tree data structure of DOM\rexplores the neighbor nodes first, before moving to the next level neighbors.\rTime complexity: between O(1) and O(|V|^2).\n */\nexport class BFS {\n/**\n * Target node is a non empty text node.\n * @param {?} rootNode\n * @return {?}\n */\npublic static getTargetNode(rootNode: any): any {\r\n        return this.walk(rootNode);\r\n    }\n/**\n * @param {?} rootNode\n * @return {?}\n */\nprivate static walk(rootNode: any): any {\r\n        let /** @type {?} */ queue: any[] = [];\r\n        let /** @type {?} */ iNode: any;\r\n\r\n        queue.push(rootNode);\r\n\r\n        while (queue.length > 0) {\r\n            iNode = queue.shift();\r\n            if (this.isTargetNode(iNode)) {\r\n                return iNode;\r\n            }\r\n            if (iNode.childNodes != null) {\r\n                for (let /** @type {?} */ child of iNode.childNodes) {\r\n                    queue.push(child);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate static isTargetNode(node: any): boolean {\r\n        return typeof node !== \"undefined\" &&\r\n            node.nodeValue != null &&\r\n            node.nodeValue.trim() != \"\" &&\r\n            node.nodeType == 3;\r\n    }\r\n\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}